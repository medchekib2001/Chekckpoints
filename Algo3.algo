PROCEDURE dot_product(U,V:ARRAY_OF FLOAT[N] ,var ps)
VAR
    Ps :FLOAT:=0;
    i :INTEGER;
BEGIN
    FOR i FROM 0 TO N   DO
        Ps:=Ps+(U[i]*V[i]); 
    END_FOR
   
END



FUNCTION dot_product(var U,V: ARRAY_OF FLOAT[N]) : FLOAT
VAR
    Ps :FLOAT:=0;
    i :INTEGER;
BEGIN
    FOR i FROM 0 TO N STEP 1  DO
        Ps:=Ps+(U[i]*V[i]); 
    END_FOR
    RETURN Ps ;
END

ALGORITHM orthogonal
VAR
    N,n,j,i: INTEGER;
    R,F: ARRAY_OF FLOAT[N];
    ps:FLOAT;

BEGIN
    Read(N)
    FOR j FROM 1 TO n   DO
        FOR i FROM 0 TO N-1 STEP step  DO
    Read(F[i])
    Read(R[i])
    END_FOR
    
        (dot_product(R,F,ps) 
        IF (ps=0) THEN
            Write('R and F are orthogonal')
        END_IF
    END_FOR
END